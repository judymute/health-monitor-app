{"ast":null,"code":"var _jsxFileName = \"/Users/jlam/Documents/GitHub/health-monitor-app/client/src/UserDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserProfile from './UserProfile';\nimport DaySelector from './DaySelector';\nimport MealPlan from './MealPlan';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  userData\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [recommendations, setRecommendations] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [errorDetails, setErrorDetails] = useState(null);\n  const [activeDay, setActiveDay] = useState(new Date().getDate());\n  useEffect(() => {\n    if (!userData) {\n      navigate('/questionnaire');\n      return;\n    }\n    const fetchRecommendations = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setErrorDetails(null);\n        const response = await fetch('http://localhost:3001/api/generateMealPlan', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        });\n        const data = await response.json();\n        if (!response.ok || !data.success) throw new Error(data.message || 'Failed to generate meal plan');\n        setRecommendations(data.mealPlan);\n        setLoading(false);\n      } catch (err) {\n        setError(`Failed to load your recommendations: ${err.message}`);\n        setErrorDetails(err.stack || \"No additional details available\");\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n  }, [userData, navigate]);\n  const handleRetakeQuestionnaire = () => navigate('/questionnaire');\n  const handleRefreshRecommendations = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:3001/api/generateMealPlan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok || !data.success) throw new Error(data.message || 'Failed to generate meal plan');\n      setRecommendations(data.mealPlan);\n      setLoading(false);\n    } catch (err) {\n      setError(`Failed to refresh your recommendations: ${err.message}`);\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center my-5\",\n    children: \"Loading meal plan...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center my-5 text-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid py-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n        userData: userData,\n        onRetake: handleRetakeQuestionnaire\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DaySelector, {\n        activeDay: activeDay,\n        setActiveDay: setActiveDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MealPlan, {\n        recommendations: recommendations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"2HY+/Cqv/H0WQkmKYVIQaxGnNnE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","UserProfile","DaySelector","MealPlan","jsxDEV","_jsxDEV","UserDashboard","userData","_s","navigate","recommendations","setRecommendations","loading","setLoading","error","setError","errorDetails","setErrorDetails","activeDay","setActiveDay","Date","getDate","fetchRecommendations","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","Error","message","mealPlan","err","stack","handleRetakeQuestionnaire","handleRefreshRecommendations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRetake","_c","$RefreshReg$"],"sources":["/Users/jlam/Documents/GitHub/health-monitor-app/client/src/UserDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserProfile from './UserProfile';\nimport DaySelector from './DaySelector';\nimport MealPlan from './MealPlan';\n\nconst UserDashboard = ({ userData }) => {\n  const navigate = useNavigate();\n  const [recommendations, setRecommendations] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [errorDetails, setErrorDetails] = useState(null);\n  const [activeDay, setActiveDay] = useState(new Date().getDate());\n\n  useEffect(() => {\n    if (!userData) {\n      navigate('/questionnaire');\n      return;\n    }\n\n    const fetchRecommendations = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setErrorDetails(null);\n\n        const response = await fetch('http://localhost:3001/api/generateMealPlan', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(userData),\n        });\n\n        const data = await response.json();\n        if (!response.ok || !data.success) throw new Error(data.message || 'Failed to generate meal plan');\n\n        setRecommendations(data.mealPlan);\n        setLoading(false);\n      } catch (err) {\n        setError(`Failed to load your recommendations: ${err.message}`);\n        setErrorDetails(err.stack || \"No additional details available\");\n        setLoading(false);\n      }\n    };\n\n    fetchRecommendations();\n  }, [userData, navigate]);\n\n  const handleRetakeQuestionnaire = () => navigate('/questionnaire');\n\n  const handleRefreshRecommendations = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:3001/api/generateMealPlan', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(userData),\n      });\n\n      const data = await response.json();\n      if (!response.ok || !data.success) throw new Error(data.message || 'Failed to generate meal plan');\n\n      setRecommendations(data.mealPlan);\n      setLoading(false);\n    } catch (err) {\n      setError(`Failed to refresh your recommendations: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  if (loading) return <div className=\"text-center my-5\">Loading meal plan...</div>;\n  if (error) return <div className=\"text-center my-5 text-danger\">{error}</div>;\n\n  return (\n    <div className=\"container-fluid py-4\">\n      <div className=\"container\">\n        <UserProfile userData={userData} onRetake={handleRetakeQuestionnaire} />\n        <DaySelector activeDay={activeDay} setActiveDay={setActiveDay} />\n        <MealPlan recommendations={recommendations} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
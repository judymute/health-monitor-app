{"ast":null,"code":"var _jsxFileName = \"/Users/jlam/Documents/GitHub/health-monitor-app/client/src/ShoppingList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Button } from '@/components/ui/button';\nimport { Check, Copy, Printer } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoppingList = ({\n  mealPlan\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  useEffect(() => {\n    if (mealPlan && mealPlan.dailyPlan) {\n      // Extract and consolidate ingredients from all meals\n      const allIngredients = extractIngredients(mealPlan.dailyPlan);\n      setIngredients(allIngredients);\n\n      // Initialize checked state for all ingredients\n      const initialCheckedState = {};\n      allIngredients.forEach(item => {\n        initialCheckedState[item.id] = false;\n      });\n      setCheckedItems(initialCheckedState);\n    }\n  }, [mealPlan]);\n\n  // Extract ingredients from meal plan\n  const extractIngredients = dailyPlan => {\n    const ingredientsList = [];\n    let idCounter = 0;\n\n    // Process breakfast\n    if (dailyPlan.breakfast && dailyPlan.breakfast.ingredients) {\n      dailyPlan.breakfast.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Breakfast'\n        });\n      });\n    }\n\n    // Process lunch\n    if (dailyPlan.lunch && dailyPlan.lunch.ingredients) {\n      dailyPlan.lunch.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Lunch'\n        });\n      });\n    }\n\n    // Process dinner\n    if (dailyPlan.dinner && dailyPlan.dinner.ingredients) {\n      dailyPlan.dinner.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Dinner'\n        });\n      });\n    }\n\n    // Process snacks\n    if (dailyPlan.snacks && dailyPlan.snacks.length > 0) {\n      dailyPlan.snacks.forEach((snack, snackIndex) => {\n        if (snack.ingredients) {\n          snack.ingredients.forEach(ingredient => {\n            ingredientsList.push({\n              id: `ingredient-${idCounter++}`,\n              name: ingredient,\n              meal: `Snack ${snackIndex + 1}`\n            });\n          });\n        }\n      });\n    }\n    return ingredientsList;\n  };\n\n  // Handle checkbox changes\n  const handleCheckboxChange = id => {\n    setCheckedItems(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  // Handle clearing all checkboxes\n  const handleClearAll = () => {\n    const clearedState = {};\n    Object.keys(checkedItems).forEach(key => {\n      clearedState[key] = false;\n    });\n    setCheckedItems(clearedState);\n  };\n\n  // Handle checking all checkboxes\n  const handleCheckAll = () => {\n    const checkedState = {};\n    Object.keys(checkedItems).forEach(key => {\n      checkedState[key] = true;\n    });\n    setCheckedItems(checkedState);\n  };\n\n  // Copy shopping list to clipboard\n  const copyToClipboard = () => {\n    const uncheckedItems = ingredients.filter(item => !checkedItems[item.id]).map(item => item.name).join('\\n');\n    navigator.clipboard.writeText(uncheckedItems).then(() => {\n      alert('Shopping list copied to clipboard!');\n    }).catch(err => {\n      console.error('Failed to copy:', err);\n    });\n  };\n\n  // Print shopping list\n  const printList = () => {\n    const printWindow = window.open('', '_blank');\n    const uncheckedItems = ingredients.filter(item => !checkedItems[item.id]).map(item => item.name);\n    printWindow.document.write(`\n      <html>\n        <head>\n          <title>Shopping List</title>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            h1 { text-align: center; }\n            ul { list-style-type: none; padding: 0; }\n            li { padding: 8px; border-bottom: 1px solid #eee; }\n            @media print {\n              button { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <h1>Shopping List</h1>\n          <ul>\n            ${uncheckedItems.map(item => `<li>â–¡ ${item}</li>`).join('')}\n          </ul>\n          <button onClick=\"window.print()\">Print</button>\n        </body>\n      </html>\n    `);\n  };\n\n  // Group ingredients by meal\n  const groupedIngredients = ingredients.reduce((acc, ingredient) => {\n    if (!acc[ingredient.meal]) {\n      acc[ingredient.meal] = [];\n    }\n    acc[ingredient.meal].push(ingredient);\n    return acc;\n  }, {});\n\n  // Count total and checked items\n  const totalItems = ingredients.length;\n  const checkedItemsCount = Object.values(checkedItems).filter(Boolean).length;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"w-full max-w-xl\",\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: \"pb-2\",\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-normal text-gray-500\",\n          children: [checkedItemsCount, \"/\", totalItems, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: handleClearAll,\n          className: \"text-xs\",\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: handleCheckAll,\n          className: \"text-xs\",\n          children: \"Check All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: copyToClipboard,\n          className: \"text-xs ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Copy, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), \"Copy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"sm\",\n          onClick: printList,\n          className: \"text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(Printer, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), \"Print\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-96 overflow-y-auto\",\n        children: Object.entries(groupedIngredients).map(([meal, mealIngredients]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700 mb-2\",\n            children: meal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: mealIngredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 py-1 px-2 rounded hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                id: ingredient.id,\n                checked: checkedItems[ingredient.id] || false,\n                onCheckedChange: () => handleCheckboxChange(ingredient.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: ingredient.id,\n                className: `text-sm cursor-pointer flex-1 ${checkedItems[ingredient.id] ? 'line-through text-gray-400' : ''}`,\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, ingredient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, meal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), ingredients.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: \"No ingredients found in meal plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(ShoppingList, \"X0nUtpp0eeowvvah/O631xgcoJ0=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Checkbox","Button","Check","Copy","Printer","jsxDEV","_jsxDEV","ShoppingList","mealPlan","_s","ingredients","setIngredients","checkedItems","setCheckedItems","dailyPlan","allIngredients","extractIngredients","initialCheckedState","forEach","item","id","ingredientsList","idCounter","breakfast","ingredient","push","name","meal","lunch","dinner","snacks","length","snack","snackIndex","handleCheckboxChange","prev","handleClearAll","clearedState","Object","keys","key","handleCheckAll","checkedState","copyToClipboard","uncheckedItems","filter","map","join","navigator","clipboard","writeText","then","alert","catch","err","console","error","printList","printWindow","window","open","document","write","groupedIngredients","reduce","acc","totalItems","checkedItemsCount","values","Boolean","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","entries","mealIngredients","checked","onCheckedChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/jlam/Documents/GitHub/health-monitor-app/client/src/ShoppingList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Button } from '@/components/ui/button';\nimport { Check, Copy, Printer } from 'lucide-react';\n\nconst ShoppingList = ({ mealPlan }) => {\n  const [ingredients, setIngredients] = useState([]);\n  const [checkedItems, setCheckedItems] = useState({});\n  \n  useEffect(() => {\n    if (mealPlan && mealPlan.dailyPlan) {\n      // Extract and consolidate ingredients from all meals\n      const allIngredients = extractIngredients(mealPlan.dailyPlan);\n      setIngredients(allIngredients);\n      \n      // Initialize checked state for all ingredients\n      const initialCheckedState = {};\n      allIngredients.forEach(item => {\n        initialCheckedState[item.id] = false;\n      });\n      setCheckedItems(initialCheckedState);\n    }\n  }, [mealPlan]);\n  \n  // Extract ingredients from meal plan\n  const extractIngredients = (dailyPlan) => {\n    const ingredientsList = [];\n    let idCounter = 0;\n    \n    // Process breakfast\n    if (dailyPlan.breakfast && dailyPlan.breakfast.ingredients) {\n      dailyPlan.breakfast.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Breakfast'\n        });\n      });\n    }\n    \n    // Process lunch\n    if (dailyPlan.lunch && dailyPlan.lunch.ingredients) {\n      dailyPlan.lunch.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Lunch'\n        });\n      });\n    }\n    \n    // Process dinner\n    if (dailyPlan.dinner && dailyPlan.dinner.ingredients) {\n      dailyPlan.dinner.ingredients.forEach(ingredient => {\n        ingredientsList.push({\n          id: `ingredient-${idCounter++}`,\n          name: ingredient,\n          meal: 'Dinner'\n        });\n      });\n    }\n    \n    // Process snacks\n    if (dailyPlan.snacks && dailyPlan.snacks.length > 0) {\n      dailyPlan.snacks.forEach((snack, snackIndex) => {\n        if (snack.ingredients) {\n          snack.ingredients.forEach(ingredient => {\n            ingredientsList.push({\n              id: `ingredient-${idCounter++}`,\n              name: ingredient,\n              meal: `Snack ${snackIndex + 1}`\n            });\n          });\n        }\n      });\n    }\n    \n    return ingredientsList;\n  };\n  \n  // Handle checkbox changes\n  const handleCheckboxChange = (id) => {\n    setCheckedItems(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  \n  // Handle clearing all checkboxes\n  const handleClearAll = () => {\n    const clearedState = {};\n    Object.keys(checkedItems).forEach(key => {\n      clearedState[key] = false;\n    });\n    setCheckedItems(clearedState);\n  };\n  \n  // Handle checking all checkboxes\n  const handleCheckAll = () => {\n    const checkedState = {};\n    Object.keys(checkedItems).forEach(key => {\n      checkedState[key] = true;\n    });\n    setCheckedItems(checkedState);\n  };\n  \n  // Copy shopping list to clipboard\n  const copyToClipboard = () => {\n    const uncheckedItems = ingredients\n      .filter(item => !checkedItems[item.id])\n      .map(item => item.name)\n      .join('\\n');\n    \n    navigator.clipboard.writeText(uncheckedItems)\n      .then(() => {\n        alert('Shopping list copied to clipboard!');\n      })\n      .catch(err => {\n        console.error('Failed to copy:', err);\n      });\n  };\n  \n  // Print shopping list\n  const printList = () => {\n    const printWindow = window.open('', '_blank');\n    const uncheckedItems = ingredients\n      .filter(item => !checkedItems[item.id])\n      .map(item => item.name);\n    \n    printWindow.document.write(`\n      <html>\n        <head>\n          <title>Shopping List</title>\n          <style>\n            body { font-family: Arial, sans-serif; padding: 20px; }\n            h1 { text-align: center; }\n            ul { list-style-type: none; padding: 0; }\n            li { padding: 8px; border-bottom: 1px solid #eee; }\n            @media print {\n              button { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <h1>Shopping List</h1>\n          <ul>\n            ${uncheckedItems.map(item => `<li>â–¡ ${item}</li>`).join('')}\n          </ul>\n          <button onClick=\"window.print()\">Print</button>\n        </body>\n      </html>\n    `);\n  };\n  \n  // Group ingredients by meal\n  const groupedIngredients = ingredients.reduce((acc, ingredient) => {\n    if (!acc[ingredient.meal]) {\n      acc[ingredient.meal] = [];\n    }\n    acc[ingredient.meal].push(ingredient);\n    return acc;\n  }, {});\n  \n  // Count total and checked items\n  const totalItems = ingredients.length;\n  const checkedItemsCount = Object.values(checkedItems).filter(Boolean).length;\n  \n  return (\n    <Card className=\"w-full max-w-xl\">\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"flex justify-between items-center\">\n          <span>Shopping List</span>\n          <span className=\"text-sm font-normal text-gray-500\">\n            {checkedItemsCount}/{totalItems} items\n          </span>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex gap-2 mb-4\">\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleClearAll}\n            className=\"text-xs\"\n          >\n            Clear All\n          </Button>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleCheckAll}\n            className=\"text-xs\"\n          >\n            Check All\n          </Button>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={copyToClipboard}\n            className=\"text-xs ml-auto\"\n          >\n            <Copy className=\"h-4 w-4 mr-1\" />\n            Copy\n          </Button>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={printList}\n            className=\"text-xs\"\n          >\n            <Printer className=\"h-4 w-4 mr-1\" />\n            Print\n          </Button>\n        </div>\n        \n        <div className=\"max-h-96 overflow-y-auto\">\n          {Object.entries(groupedIngredients).map(([meal, mealIngredients]) => (\n            <div key={meal} className=\"mb-4\">\n              <h3 className=\"text-sm font-medium text-gray-700 mb-2\">{meal}</h3>\n              <div className=\"space-y-2\">\n                {mealIngredients.map(ingredient => (\n                  <div \n                    key={ingredient.id}\n                    className=\"flex items-center space-x-2 py-1 px-2 rounded hover:bg-gray-50\"\n                  >\n                    <Checkbox \n                      id={ingredient.id}\n                      checked={checkedItems[ingredient.id] || false}\n                      onCheckedChange={() => handleCheckboxChange(ingredient.id)}\n                    />\n                    <label \n                      htmlFor={ingredient.id}\n                      className={`text-sm cursor-pointer flex-1 ${checkedItems[ingredient.id] ? 'line-through text-gray-400' : ''}`}\n                    >\n                      {ingredient.name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        {ingredients.length === 0 && (\n          <div className=\"text-center py-8 text-gray-500\">\n            No ingredients found in meal plan\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ShoppingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
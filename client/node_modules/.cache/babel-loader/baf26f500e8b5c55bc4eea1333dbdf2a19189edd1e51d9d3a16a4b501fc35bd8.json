{"ast":null,"code":"var _jsxFileName = \"/Users/jlam/Documents/GitHub/health-monitor-app/client/src/MealPlan.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlan = ({\n  recommendations\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border-0 rounded-4 shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Nutrition Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), ['breakfast', 'lunch', 'dinner'].map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: meal.charAt(0).toUpperCase() + meal.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: recommendations.dailyPlan[meal].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 16\n          }, this), \" \", recommendations.dailyPlan[meal].ingredients.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preparation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 16\n          }, this), \" \", recommendations.dailyPlan[meal].preparation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Snacks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), recommendations.dailyPlan.snacks.map((snack, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: snack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ingredients:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 16\n          }, this), \" \", snack.ingredients.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Preparation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 16\n          }, this), \" \", snack.preparation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = MealPlan;\nexport default MealPlan;\nvar _c;\n$RefreshReg$(_c, \"MealPlan\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MealPlan","recommendations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meal","charAt","toUpperCase","slice","dailyPlan","name","ingredients","join","preparation","snacks","snack","idx","_c","$RefreshReg$"],"sources":["/Users/jlam/Documents/GitHub/health-monitor-app/client/src/MealPlan.jsx"],"sourcesContent":["import React from 'react';\n\nconst MealPlan = ({ recommendations }) => {\n  return (\n    <div className=\"card border-0 rounded-4 shadow-sm\">\n      <div className=\"card-body p-4\">\n        <h2>Your Nutrition Plan</h2>\n        \n        {['breakfast', 'lunch', 'dinner'].map((meal) => (\n          <div key={meal} className=\"card mb-4 p-3\">\n            <h3>{meal.charAt(0).toUpperCase() + meal.slice(1)}</h3>\n            <h4>{recommendations.dailyPlan[meal].name}</h4>\n            <p><strong>Ingredients:</strong> {recommendations.dailyPlan[meal].ingredients.join(', ')}</p>\n            <p><strong>Preparation:</strong> {recommendations.dailyPlan[meal].preparation}</p>\n          </div>\n        ))}\n\n        <h3>Snacks</h3>\n        {recommendations.dailyPlan.snacks.map((snack, idx) => (\n          <div key={idx} className=\"card mb-3 p-3\">\n            <h4>{snack.name}</h4>\n            <p><strong>Ingredients:</strong> {snack.ingredients.join(', ')}</p>\n            <p><strong>Preparation:</strong> {snack.preparation}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MealPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}